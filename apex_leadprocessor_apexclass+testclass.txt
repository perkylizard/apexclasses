LeadProcessor Apex Class:

 

global class LeadProcessor implements Database.Batchable <SObject> {
//Start Method

global Database.QueryLocator Start(Database.BatchableContext bc) {
String Query = ‘Select Id, LeadSource from Lead’;
return Database.getQueryLocator(Query);

}

//Execute Method

global void execute(Database.BatchableContext bc, List<Lead> Scope) {
if(Scope != null && !Scope.isEmpty()) {
for(Lead L : Scope) {
L.LeadSource = ‘DreamForce’;
}

update Scope;
}

}

//Finish Method

global void finish(Database.BatchableContext bc) {
Id BatchId = bc.getJobId();
system.debug(‘BatchId::’+ BatchId);
}

}


LeadProcessorTest – Test Class

 

@isTest
public class LeadProcessorTest {
@testSetup
static void setup() {
List<Lead> Leads = new List<Lead>();
for(Integer i=0; i <100; i++) {
Leads.add(new lead(LastName = ‘LastName’+i, FirstName=’FirstName’+i, Email=’test’+i+’@theblogreaders.com’, LeadSource=’Web’, Company=’TRP’));
}
insert Leads;
}

static testmethod void test() {
Test.startTest();
LeadProcessor lp =new LeadProcessor();
Id BatchId = Database.executeBatch(lp);
Test.stopTest();
System.assertEquals([select count() from Lead Where LeadSource=’DreamForce’], 100);
}
}

 